{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.removeLeadingDotSegment = exports.escape = exports.makeAbsolute = exports.unixify = void 0;\nconst path = require(\"path\");\nconst LEADING_DOT_SEGMENT_CHARACTERS_COUNT = 2; // ./ or .\\\\\nconst UNESCAPED_GLOB_SYMBOLS_RE = /(\\\\?)([()*?[\\]{|}]|^!|[!+@](?=\\())/g;\n/**\r\n * Designed to work only with simple paths: `dir\\\\file`.\r\n */\nfunction unixify(filepath) {\n  return filepath.replace(/\\\\/g, '/');\n}\nexports.unixify = unixify;\nfunction makeAbsolute(cwd, filepath) {\n  return path.resolve(cwd, filepath);\n}\nexports.makeAbsolute = makeAbsolute;\nfunction escape(pattern) {\n  return pattern.replace(UNESCAPED_GLOB_SYMBOLS_RE, '\\\\$2');\n}\nexports.escape = escape;\nfunction removeLeadingDotSegment(entry) {\n  // We do not use `startsWith` because this is 10x slower than current implementation for some cases.\n  // eslint-disable-next-line @typescript-eslint/prefer-string-starts-ends-with\n  if (entry.charAt(0) === '.') {\n    const secondCharactery = entry.charAt(1);\n    if (secondCharactery === '/' || secondCharactery === '\\\\') {\n      return entry.slice(LEADING_DOT_SEGMENT_CHARACTERS_COUNT);\n    }\n  }\n  return entry;\n}\nexports.removeLeadingDotSegment = removeLeadingDotSegment;","map":{"version":3,"names":["Object","defineProperty","exports","value","removeLeadingDotSegment","escape","makeAbsolute","unixify","path","require","LEADING_DOT_SEGMENT_CHARACTERS_COUNT","UNESCAPED_GLOB_SYMBOLS_RE","filepath","replace","cwd","resolve","pattern","entry","charAt","secondCharactery","slice"],"sources":["/Users/manan/Desktop/hach-unicorn/StockSure/frontend1/node_modules/fast-glob/out/utils/path.js"],"sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.removeLeadingDotSegment = exports.escape = exports.makeAbsolute = exports.unixify = void 0;\r\nconst path = require(\"path\");\r\nconst LEADING_DOT_SEGMENT_CHARACTERS_COUNT = 2; // ./ or .\\\\\r\nconst UNESCAPED_GLOB_SYMBOLS_RE = /(\\\\?)([()*?[\\]{|}]|^!|[!+@](?=\\())/g;\r\n/**\r\n * Designed to work only with simple paths: `dir\\\\file`.\r\n */\r\nfunction unixify(filepath) {\r\n    return filepath.replace(/\\\\/g, '/');\r\n}\r\nexports.unixify = unixify;\r\nfunction makeAbsolute(cwd, filepath) {\r\n    return path.resolve(cwd, filepath);\r\n}\r\nexports.makeAbsolute = makeAbsolute;\r\nfunction escape(pattern) {\r\n    return pattern.replace(UNESCAPED_GLOB_SYMBOLS_RE, '\\\\$2');\r\n}\r\nexports.escape = escape;\r\nfunction removeLeadingDotSegment(entry) {\r\n    // We do not use `startsWith` because this is 10x slower than current implementation for some cases.\r\n    // eslint-disable-next-line @typescript-eslint/prefer-string-starts-ends-with\r\n    if (entry.charAt(0) === '.') {\r\n        const secondCharactery = entry.charAt(1);\r\n        if (secondCharactery === '/' || secondCharactery === '\\\\') {\r\n            return entry.slice(LEADING_DOT_SEGMENT_CHARACTERS_COUNT);\r\n        }\r\n    }\r\n    return entry;\r\n}\r\nexports.removeLeadingDotSegment = removeLeadingDotSegment;\r\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,uBAAuB,GAAGF,OAAO,CAACG,MAAM,GAAGH,OAAO,CAACI,YAAY,GAAGJ,OAAO,CAACK,OAAO,GAAG,KAAK,CAAC;AAClG,MAAMC,IAAI,GAAGC,OAAO,CAAC,MAAM,CAAC;AAC5B,MAAMC,oCAAoC,GAAG,CAAC,CAAC,CAAC;AAChD,MAAMC,yBAAyB,GAAG,qCAAqC;AACvE;AACA;AACA;AACA,SAASJ,OAAOA,CAACK,QAAQ,EAAE;EACvB,OAAOA,QAAQ,CAACC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC;AACvC;AACAX,OAAO,CAACK,OAAO,GAAGA,OAAO;AACzB,SAASD,YAAYA,CAACQ,GAAG,EAAEF,QAAQ,EAAE;EACjC,OAAOJ,IAAI,CAACO,OAAO,CAACD,GAAG,EAAEF,QAAQ,CAAC;AACtC;AACAV,OAAO,CAACI,YAAY,GAAGA,YAAY;AACnC,SAASD,MAAMA,CAACW,OAAO,EAAE;EACrB,OAAOA,OAAO,CAACH,OAAO,CAACF,yBAAyB,EAAE,MAAM,CAAC;AAC7D;AACAT,OAAO,CAACG,MAAM,GAAGA,MAAM;AACvB,SAASD,uBAAuBA,CAACa,KAAK,EAAE;EACpC;EACA;EACA,IAAIA,KAAK,CAACC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;IACzB,MAAMC,gBAAgB,GAAGF,KAAK,CAACC,MAAM,CAAC,CAAC,CAAC;IACxC,IAAIC,gBAAgB,KAAK,GAAG,IAAIA,gBAAgB,KAAK,IAAI,EAAE;MACvD,OAAOF,KAAK,CAACG,KAAK,CAACV,oCAAoC,CAAC;IAC5D;EACJ;EACA,OAAOO,KAAK;AAChB;AACAf,OAAO,CAACE,uBAAuB,GAAGA,uBAAuB"},"metadata":{},"sourceType":"script","externalDependencies":[]}