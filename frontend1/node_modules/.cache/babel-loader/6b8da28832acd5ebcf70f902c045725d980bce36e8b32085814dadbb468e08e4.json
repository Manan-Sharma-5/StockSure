{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DEFAULT_FILE_SYSTEM_ADAPTER = void 0;\nconst fs = require(\"fs\");\nconst os = require(\"os\");\n/**\r\n * The `os.cpus` method can return zero. We expect the number of cores to be greater than zero.\r\n * https://github.com/nodejs/node/blob/7faeddf23a98c53896f8b574a6e66589e8fb1eb8/lib/os.js#L106-L107\r\n */\nconst CPU_COUNT = Math.max(os.cpus().length, 1);\nexports.DEFAULT_FILE_SYSTEM_ADAPTER = {\n  lstat: fs.lstat,\n  lstatSync: fs.lstatSync,\n  stat: fs.stat,\n  statSync: fs.statSync,\n  readdir: fs.readdir,\n  readdirSync: fs.readdirSync\n};\nclass Settings {\n  constructor() {\n    let _options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    this._options = _options;\n    this.absolute = this._getValue(this._options.absolute, false);\n    this.baseNameMatch = this._getValue(this._options.baseNameMatch, false);\n    this.braceExpansion = this._getValue(this._options.braceExpansion, true);\n    this.caseSensitiveMatch = this._getValue(this._options.caseSensitiveMatch, true);\n    this.concurrency = this._getValue(this._options.concurrency, CPU_COUNT);\n    this.cwd = this._getValue(this._options.cwd, process.cwd());\n    this.deep = this._getValue(this._options.deep, Infinity);\n    this.dot = this._getValue(this._options.dot, false);\n    this.extglob = this._getValue(this._options.extglob, true);\n    this.followSymbolicLinks = this._getValue(this._options.followSymbolicLinks, true);\n    this.fs = this._getFileSystemMethods(this._options.fs);\n    this.globstar = this._getValue(this._options.globstar, true);\n    this.ignore = this._getValue(this._options.ignore, []);\n    this.markDirectories = this._getValue(this._options.markDirectories, false);\n    this.objectMode = this._getValue(this._options.objectMode, false);\n    this.onlyDirectories = this._getValue(this._options.onlyDirectories, false);\n    this.onlyFiles = this._getValue(this._options.onlyFiles, true);\n    this.stats = this._getValue(this._options.stats, false);\n    this.suppressErrors = this._getValue(this._options.suppressErrors, false);\n    this.throwErrorOnBrokenSymbolicLink = this._getValue(this._options.throwErrorOnBrokenSymbolicLink, false);\n    this.unique = this._getValue(this._options.unique, true);\n    if (this.onlyDirectories) {\n      this.onlyFiles = false;\n    }\n    if (this.stats) {\n      this.objectMode = true;\n    }\n  }\n  _getValue(option, value) {\n    return option === undefined ? value : option;\n  }\n  _getFileSystemMethods() {\n    let methods = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return Object.assign(Object.assign({}, exports.DEFAULT_FILE_SYSTEM_ADAPTER), methods);\n  }\n}\nexports.default = Settings;","map":{"version":3,"names":["Object","defineProperty","exports","value","DEFAULT_FILE_SYSTEM_ADAPTER","fs","require","os","CPU_COUNT","Math","max","cpus","length","lstat","lstatSync","stat","statSync","readdir","readdirSync","Settings","constructor","_options","arguments","undefined","absolute","_getValue","baseNameMatch","braceExpansion","caseSensitiveMatch","concurrency","cwd","process","deep","Infinity","dot","extglob","followSymbolicLinks","_getFileSystemMethods","globstar","ignore","markDirectories","objectMode","onlyDirectories","onlyFiles","stats","suppressErrors","throwErrorOnBrokenSymbolicLink","unique","option","methods","assign","default"],"sources":["/Users/manan/Desktop/hach-unicorn/StockSure/frontend1/node_modules/fast-glob/out/settings.js"],"sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.DEFAULT_FILE_SYSTEM_ADAPTER = void 0;\r\nconst fs = require(\"fs\");\r\nconst os = require(\"os\");\r\n/**\r\n * The `os.cpus` method can return zero. We expect the number of cores to be greater than zero.\r\n * https://github.com/nodejs/node/blob/7faeddf23a98c53896f8b574a6e66589e8fb1eb8/lib/os.js#L106-L107\r\n */\r\nconst CPU_COUNT = Math.max(os.cpus().length, 1);\r\nexports.DEFAULT_FILE_SYSTEM_ADAPTER = {\r\n    lstat: fs.lstat,\r\n    lstatSync: fs.lstatSync,\r\n    stat: fs.stat,\r\n    statSync: fs.statSync,\r\n    readdir: fs.readdir,\r\n    readdirSync: fs.readdirSync\r\n};\r\nclass Settings {\r\n    constructor(_options = {}) {\r\n        this._options = _options;\r\n        this.absolute = this._getValue(this._options.absolute, false);\r\n        this.baseNameMatch = this._getValue(this._options.baseNameMatch, false);\r\n        this.braceExpansion = this._getValue(this._options.braceExpansion, true);\r\n        this.caseSensitiveMatch = this._getValue(this._options.caseSensitiveMatch, true);\r\n        this.concurrency = this._getValue(this._options.concurrency, CPU_COUNT);\r\n        this.cwd = this._getValue(this._options.cwd, process.cwd());\r\n        this.deep = this._getValue(this._options.deep, Infinity);\r\n        this.dot = this._getValue(this._options.dot, false);\r\n        this.extglob = this._getValue(this._options.extglob, true);\r\n        this.followSymbolicLinks = this._getValue(this._options.followSymbolicLinks, true);\r\n        this.fs = this._getFileSystemMethods(this._options.fs);\r\n        this.globstar = this._getValue(this._options.globstar, true);\r\n        this.ignore = this._getValue(this._options.ignore, []);\r\n        this.markDirectories = this._getValue(this._options.markDirectories, false);\r\n        this.objectMode = this._getValue(this._options.objectMode, false);\r\n        this.onlyDirectories = this._getValue(this._options.onlyDirectories, false);\r\n        this.onlyFiles = this._getValue(this._options.onlyFiles, true);\r\n        this.stats = this._getValue(this._options.stats, false);\r\n        this.suppressErrors = this._getValue(this._options.suppressErrors, false);\r\n        this.throwErrorOnBrokenSymbolicLink = this._getValue(this._options.throwErrorOnBrokenSymbolicLink, false);\r\n        this.unique = this._getValue(this._options.unique, true);\r\n        if (this.onlyDirectories) {\r\n            this.onlyFiles = false;\r\n        }\r\n        if (this.stats) {\r\n            this.objectMode = true;\r\n        }\r\n    }\r\n    _getValue(option, value) {\r\n        return option === undefined ? value : option;\r\n    }\r\n    _getFileSystemMethods(methods = {}) {\r\n        return Object.assign(Object.assign({}, exports.DEFAULT_FILE_SYSTEM_ADAPTER), methods);\r\n    }\r\n}\r\nexports.default = Settings;\r\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,2BAA2B,GAAG,KAAK,CAAC;AAC5C,MAAMC,EAAE,GAAGC,OAAO,CAAC,IAAI,CAAC;AACxB,MAAMC,EAAE,GAAGD,OAAO,CAAC,IAAI,CAAC;AACxB;AACA;AACA;AACA;AACA,MAAME,SAAS,GAAGC,IAAI,CAACC,GAAG,CAACH,EAAE,CAACI,IAAI,CAAC,CAAC,CAACC,MAAM,EAAE,CAAC,CAAC;AAC/CV,OAAO,CAACE,2BAA2B,GAAG;EAClCS,KAAK,EAAER,EAAE,CAACQ,KAAK;EACfC,SAAS,EAAET,EAAE,CAACS,SAAS;EACvBC,IAAI,EAAEV,EAAE,CAACU,IAAI;EACbC,QAAQ,EAAEX,EAAE,CAACW,QAAQ;EACrBC,OAAO,EAAEZ,EAAE,CAACY,OAAO;EACnBC,WAAW,EAAEb,EAAE,CAACa;AACpB,CAAC;AACD,MAAMC,QAAQ,CAAC;EACXC,WAAWA,CAAA,EAAgB;IAAA,IAAfC,QAAQ,GAAAC,SAAA,CAAAV,MAAA,QAAAU,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAAG,CAAC,CAAC;IACrB,IAAI,CAACD,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACG,QAAQ,GAAG,IAAI,CAACC,SAAS,CAAC,IAAI,CAACJ,QAAQ,CAACG,QAAQ,EAAE,KAAK,CAAC;IAC7D,IAAI,CAACE,aAAa,GAAG,IAAI,CAACD,SAAS,CAAC,IAAI,CAACJ,QAAQ,CAACK,aAAa,EAAE,KAAK,CAAC;IACvE,IAAI,CAACC,cAAc,GAAG,IAAI,CAACF,SAAS,CAAC,IAAI,CAACJ,QAAQ,CAACM,cAAc,EAAE,IAAI,CAAC;IACxE,IAAI,CAACC,kBAAkB,GAAG,IAAI,CAACH,SAAS,CAAC,IAAI,CAACJ,QAAQ,CAACO,kBAAkB,EAAE,IAAI,CAAC;IAChF,IAAI,CAACC,WAAW,GAAG,IAAI,CAACJ,SAAS,CAAC,IAAI,CAACJ,QAAQ,CAACQ,WAAW,EAAErB,SAAS,CAAC;IACvE,IAAI,CAACsB,GAAG,GAAG,IAAI,CAACL,SAAS,CAAC,IAAI,CAACJ,QAAQ,CAACS,GAAG,EAAEC,OAAO,CAACD,GAAG,CAAC,CAAC,CAAC;IAC3D,IAAI,CAACE,IAAI,GAAG,IAAI,CAACP,SAAS,CAAC,IAAI,CAACJ,QAAQ,CAACW,IAAI,EAAEC,QAAQ,CAAC;IACxD,IAAI,CAACC,GAAG,GAAG,IAAI,CAACT,SAAS,CAAC,IAAI,CAACJ,QAAQ,CAACa,GAAG,EAAE,KAAK,CAAC;IACnD,IAAI,CAACC,OAAO,GAAG,IAAI,CAACV,SAAS,CAAC,IAAI,CAACJ,QAAQ,CAACc,OAAO,EAAE,IAAI,CAAC;IAC1D,IAAI,CAACC,mBAAmB,GAAG,IAAI,CAACX,SAAS,CAAC,IAAI,CAACJ,QAAQ,CAACe,mBAAmB,EAAE,IAAI,CAAC;IAClF,IAAI,CAAC/B,EAAE,GAAG,IAAI,CAACgC,qBAAqB,CAAC,IAAI,CAAChB,QAAQ,CAAChB,EAAE,CAAC;IACtD,IAAI,CAACiC,QAAQ,GAAG,IAAI,CAACb,SAAS,CAAC,IAAI,CAACJ,QAAQ,CAACiB,QAAQ,EAAE,IAAI,CAAC;IAC5D,IAAI,CAACC,MAAM,GAAG,IAAI,CAACd,SAAS,CAAC,IAAI,CAACJ,QAAQ,CAACkB,MAAM,EAAE,EAAE,CAAC;IACtD,IAAI,CAACC,eAAe,GAAG,IAAI,CAACf,SAAS,CAAC,IAAI,CAACJ,QAAQ,CAACmB,eAAe,EAAE,KAAK,CAAC;IAC3E,IAAI,CAACC,UAAU,GAAG,IAAI,CAAChB,SAAS,CAAC,IAAI,CAACJ,QAAQ,CAACoB,UAAU,EAAE,KAAK,CAAC;IACjE,IAAI,CAACC,eAAe,GAAG,IAAI,CAACjB,SAAS,CAAC,IAAI,CAACJ,QAAQ,CAACqB,eAAe,EAAE,KAAK,CAAC;IAC3E,IAAI,CAACC,SAAS,GAAG,IAAI,CAAClB,SAAS,CAAC,IAAI,CAACJ,QAAQ,CAACsB,SAAS,EAAE,IAAI,CAAC;IAC9D,IAAI,CAACC,KAAK,GAAG,IAAI,CAACnB,SAAS,CAAC,IAAI,CAACJ,QAAQ,CAACuB,KAAK,EAAE,KAAK,CAAC;IACvD,IAAI,CAACC,cAAc,GAAG,IAAI,CAACpB,SAAS,CAAC,IAAI,CAACJ,QAAQ,CAACwB,cAAc,EAAE,KAAK,CAAC;IACzE,IAAI,CAACC,8BAA8B,GAAG,IAAI,CAACrB,SAAS,CAAC,IAAI,CAACJ,QAAQ,CAACyB,8BAA8B,EAAE,KAAK,CAAC;IACzG,IAAI,CAACC,MAAM,GAAG,IAAI,CAACtB,SAAS,CAAC,IAAI,CAACJ,QAAQ,CAAC0B,MAAM,EAAE,IAAI,CAAC;IACxD,IAAI,IAAI,CAACL,eAAe,EAAE;MACtB,IAAI,CAACC,SAAS,GAAG,KAAK;IAC1B;IACA,IAAI,IAAI,CAACC,KAAK,EAAE;MACZ,IAAI,CAACH,UAAU,GAAG,IAAI;IAC1B;EACJ;EACAhB,SAASA,CAACuB,MAAM,EAAE7C,KAAK,EAAE;IACrB,OAAO6C,MAAM,KAAKzB,SAAS,GAAGpB,KAAK,GAAG6C,MAAM;EAChD;EACAX,qBAAqBA,CAAA,EAAe;IAAA,IAAdY,OAAO,GAAA3B,SAAA,CAAAV,MAAA,QAAAU,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAAG,CAAC,CAAC;IAC9B,OAAOtB,MAAM,CAACkD,MAAM,CAAClD,MAAM,CAACkD,MAAM,CAAC,CAAC,CAAC,EAAEhD,OAAO,CAACE,2BAA2B,CAAC,EAAE6C,OAAO,CAAC;EACzF;AACJ;AACA/C,OAAO,CAACiD,OAAO,GAAGhC,QAAQ"},"metadata":{},"sourceType":"script","externalDependencies":[]}